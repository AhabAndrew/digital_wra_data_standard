(this["webpackJsonpjsonforms-react-seed"]=this["webpackJsonpjsonforms-react-seed"]||[]).push([[0],{160:function(e){e.exports=JSON.parse('{"$schema":"http://json-schema.org/draft-07/schema#","$id":"https://github.com/IEA-Task-43/digital_wra_data_standard/tree/master/iea43_wra_data_model.schema.json","definitions":{"notes":{"type":["string","null"],"title":"Notes","description":"Notes relating to these properties."},"update_at":{"type":"string","format":"date-time","title":"Date of Update","description":"The date these properties were last updated."}},"type":"object","title":"IEA Wind Resource Assessment Data Model","description":"This Data Model schema is a digital representation of a meteorological mast used for measureing the wind resource of a potential wind farm.","properties":{"author":{"type":"string","title":"Author","description":"The person who created this file."},"organisation":{"type":"string","title":"Organisation","description":"The organisation the Author is from."},"date":{"type":"string","format":"date-time","title":"Date","description":"The date this file was created."},"version":{"type":"string","title":"Version","description":"The version of the IEA WRA Data Model his file is based on."},"plant_name":{"type":"string","title":"Plant Name","description":"The name of the wind farm this met mast is associated with."},"plant_type":{"type":"string","title":"Plant Type","description":"The type of renewable generation plant it is.","enum":["onshore_wind","offshore_wind"],"examples":["onshore_wind"]},"measurement_location":{"type":"array","title":"Measurement Location","description":"This is the geographic location of the meteorological measurement station i.e. a met mast/tower or remote sensing device.","items":{"type":"object","properties":{"name":{"type":"string","title":"Name","description":"The name given to the measurement location i.e. to the met mast or remote sensing device."},"latitude_ddeg":{"type":"number","title":"Latitude [ddeg]","description":"Latitude coordinate in the Geographic Coordinate System using the WGS84 datum in decimal degrees. Latitude lines are parallel to the equator where their position ranges from -90 degrees at the south pole to 90 degrees at the north pole.","examples":[52.973],"minimum":-90,"maximum":90},"longitude_ddeg":{"type":"number","title":"Longitude [ddeg]","description":"Longitude coordinate in the Geographic Coordinate System using the WGS84 datum in decimal degrees. Longitude lines are perpendicular to the equator where their position ranges from 0\xb0 at Greenwich Mean Time increasing to +180\xb0 as you move eastward and decreasing to \u2212180\xb0 as you move westward.","examples":[-9.431],"minimum":-180,"maximum":180},"measurement_station_type_id":{"title":"Measurement Station Type","description":"The type of measurement station. This must be one of either mast, lidar or sodar.","type":"string","enum":["mast","lidar","sodar"],"examples":["mast"]},"notes":{"$ref":"#/definitions/notes"},"update_at":{"$ref":"#/definitions/update_at"},"mast_properties":{},"logger_main_config":{},"measurement_point":{"type":"array","title":"Measurement Point","description":"This table represents a point in space where a measurement takes place.","items":{"type":"object","properties":{"name":{"type":"string","title":"Name","description":"The name the measurement point is commonly referred to. This is the name that is used to refer to the data in an analysis and reporting."},"measurement_type_id":{"type":"string","title":"Measurement Type","description":"The type of measurement been made.","enum":["wind_speed","wind_direction","temperature","air_pressure","relative_humidity","voltage","current","solar_irradiation","vertical_wind_speed"],"examples":["wind_speed"]},"height_m":{"type":["number","null"],"title":"Height [m]","description":"The height (in meters) above ground level the measurement is taking place."},"notes":{"$ref":"#/definitions/notes"},"update_at":{"$ref":"#/definitions/update_at"},"sensor_config":{"type":"array","title":"Sensor Configuration","description":"The sensor configuration that is programmed into the logging device.","items":{"type":"object","properties":{"slope":{"type":["number","null"],"title":"Logger Slope","description":"The slope programmed into the logger."},"offset":{"type":["number","null"],"title":"Logger Offset","description":"The offset programmed into the logger."},"sensitivity":{"type":["number","null"],"title":"Logger Sensitivity","description":"The sensitivity programmed into the logger."},"measurement_units":{"type":"string","title":"Measurement Units","description":"The measurement units of the values the sensor records.","enum":["m/s","deg","deg_c","%","mb","v"]},"height_m":{"type":["number","null"],"title":"Logger Height [m]","description":"The height (in meters) programmed into the logger."},"serial_number":{"type":["string","null"],"title":"Serial Number","description":"The serial number of the sensor programmed into the logger."},"connection_channel":{"type":["string","null"],"title":"Connection Channel","description":"The connection channel the sensor is wired into on the logger."},"date_from":{"type":"string","format":"date-time","title":"Date From","description":"The date from when these properties are active. If these properties follow a change then this Date From should equal the previous Date To."},"date_to":{"anyOf":[{"type":"string","format":"date-time","title":"Date From","description":"The date to when these properties are active."},{"type":"null"}]},"notes":{"$ref":"#/definitions/notes"},"update_at":{"$ref":"#/definitions/update_at"},"column_name":{"type":"array","title":"Column Names","description":"The group of column names in the data file which relates to this sensor configuration.","items":{"type":"object","properties":{"column_name":{"type":"string","title":"Column Name","description":"The column name in the data file which relates to this sensor configuration."},"metric_id":{"type":"string","title":"Metric","description":"The metric e.g. \'average\', \'maximum\' that this column records.","enum":["avg","sd","max","min","count","sum","text"]},"is_ignored":{"type":"boolean","title":"Is Ignored","description":"If you want to ignore this column name, set to True."},"notes":{"$ref":"#/definitions/notes"},"update_at":{"$ref":"#/definitions/update_at"}},"required":["column_name","is_ignored","metric_id","update_at"]}}},"required":["column_name","connection_channel","date_from","date_to","height_m","measurement_units","offset","sensitivity","serial_number","slope","update_at"]}},"sensor":{"type":"array","items":{}},"mounting_arrangement":{"anyOf":[{"type":"array","items":{}},{"type":"null"}]}},"required":["name","measurement_type_id","height_m","update_at","sensor","sensor_config","mounting_arrangement"]}}}},"required":["name","latitude_ddeg","longitude_ddeg","measurement_station_type_id","logger_main_config","mast_properties","measurement_point","update_at"]}},"required":["author","organisation","date","version","measurement_location"]}')},161:function(e){e.exports=JSON.parse('{"type":"Control","scope":"#"}')},434:function(e,t,n){e.exports=n(753)},439:function(e,t,n){},602:function(e,t){},610:function(e,t){},612:function(e,t){},689:function(e,t,n){},753:function(e,t,n){"use strict";n.r(t);var i=n(0),r=n.n(i),a=n(14),o=n.n(a),s=(n(439),n(403)),c=n(180),m=n(11),l=n(230),d=n(836),u=n(228),p=n(401),h=n.n(p),g=n(400),f=n.n(g),_=(n(689),n(160)),y=n(161),v=n(111),b=n(229),w=n(397),j=n(398),O=n(404),T=n(399),E=n(405),C=function(e){function t(e){var n;return Object(w.a)(this,t),(n=Object(O.a)(this,Object(T.a)(t).call(this,e))).state={rating:e.value,hoverAt:null},n}return Object(E.a)(t,e),Object(j.a)(t,[{key:"handleMouseOver",value:function(e){this.setState({hoverAt:e+1})}},{key:"handleMouseOut",value:function(){this.setState({hoverAt:null})}},{key:"handleClick",value:function(e){this.setState({rating:e+1})}},{key:"render",value:function(){var e=this,t=this.props.onClick;return i.createElement("div",{id:"#/properties/rating"},i.createElement("p",null,"Rating:"),[0,1,2,3,4].map((function(n){var r=null!=e.state.hoverAt?e.state.hoverAt:e.state.rating;return i.createElement("span",{onMouseOver:function(){return e.handleMouseOver(n)},onMouseOut:function(){return e.handleMouseOut()},onClick:function(){e.handleClick(n),t({value:n+1})},key:"".concat(e.props.id,"_").concat(n)},n<r?"\u2605":"\u2606")})))}}]),t}(i.Component);C.getDerivedStateFromProps=function(e,t){return t.rating!==e.value?{rating:e.value,hoverAt:t.hoverAt}:null};var N=Object(m.withJsonFormsControlProps)((function(e){var t=e.data,n=e.handleChange,r=e.path;return i.createElement(C,{value:t,onClick:function(e){return n(r,Number(e.value))}})})),S=n(13),k=Object(S.rankWith)(3,Object(S.scopeEndsWith)("rating")),A=f()({container:{padding:"1em"},title:{textAlign:"center",padding:"0.25em"},dataContent:{display:"flex",justifyContent:"center",borderRadius:"0.25em",backgroundColor:"#eeeeee"},demoform:{margin:"auto",padding:"1rem"}}),x={},M=h()(A)((function(e){var t=e.store,n=e.classes,a=Object(i.useState)(0),o=Object(c.a)(a,1)[0],p=Object(i.useState)(""),h=Object(c.a)(p,2),g=h[0],f=h[1],w=Object(i.useState)(x),j=Object(c.a)(w,2),O=j[0],T=j[1];return Object(i.useEffect)((function(){var e=function(){var e=function(e){return e?JSON.stringify(Object(b.get)(e.getState(),["jsonforms","core","data"]),null,2):""}(t);f(e)};t.subscribe(e),e()}),[t]),Object(i.useEffect)((function(){f(JSON.stringify(O,null,2))}),[O]),r.a.createElement(i.Fragment,null,r.a.createElement("div",{className:"App"},r.a.createElement("header",{className:"App-header"},r.a.createElement("h1",{className:"App-title"},"Form Prototype"))),r.a.createElement(d.a,{container:!0,justify:"center",spacing:1,className:n.container},r.a.createElement(d.a,{item:!0,sm:12},0===o&&r.a.createElement("div",{className:n.demoform},r.a.createElement(m.JsonForms,{schema:_,uischema:y,data:O,renderers:[].concat(Object(s.a)(v.materialRenderers),[{tester:k,renderer:N}]),cells:v.materialCells,onChange:function(e){e.errors;var t=e.data;return T(t)}})),1===o&&r.a.createElement("div",{className:n.demoform,id:"form"},t?r.a.createElement(l.Provider,{store:t},r.a.createElement(m.JsonFormsReduxContext,null,r.a.createElement(m.JsonFormsDispatch,null))):null)),r.a.createElement(d.a,{item:!0,sm:12},r.a.createElement(u.a,{variant:"h3",className:n.title},"Rendered JSON"),r.a.createElement("div",{className:n.dataContent},r.a.createElement("pre",{id:"boundData"},g)))))})),D=Boolean("localhost"===window.location.hostname||"[::1]"===window.location.hostname||window.location.hostname.match(/^127(?:\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));function L(e){navigator.serviceWorker.register(e).then((function(e){e.onupdatefound=function(){var t=e.installing;t.onstatechange=function(){"installed"===t.state&&(navigator.serviceWorker.controller?console.log("New content is available; please refresh."):console.log("Content is cached for offline use."))}}})).catch((function(e){console.error("Error during service worker registration:",e)}))}var R=n(77),J=n(402),$={jsonforms:{cells:v.materialCells,renderers:v.materialRenderers}},F=Object(R.combineReducers)({jsonforms:Object(S.jsonformsReducer)()}),W=Object(R.createStore)(F,$,Object(J.devToolsEnhancer)({}));W.dispatch(S.Actions.init({name:"Send email to Adrian",description:"Confirm if you have passed the subject\nHereby ...",done:!0,recurrence:"Daily",rating:3},_,y)),W.dispatch(S.Actions.registerRenderer(k,N)),o.a.render(r.a.createElement(M,{store:W}),document.getElementById("root")),function(){if("serviceWorker"in navigator){if(new URL("/digital_wra_data_standard",window.location).origin!==window.location.origin)return;window.addEventListener("load",(function(){var e="".concat("/digital_wra_data_standard","/service-worker.js");D?function(e){fetch(e).then((function(t){404===t.status||-1===t.headers.get("content-type").indexOf("javascript")?navigator.serviceWorker.ready.then((function(e){e.unregister().then((function(){window.location.reload()}))})):L(e)})).catch((function(){console.log("No internet connection found. App is running in offline mode.")}))}(e):L(e)}))}}()}},[[434,1,2]]]);
//# sourceMappingURL=main.0494aa94.chunk.js.map